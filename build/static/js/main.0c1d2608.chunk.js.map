{"version":3,"sources":["components/LandingPage.js","config.js","components/AdoptionPage.js","root/Root.js","index.js"],"names":["LandingPage","className","id","src","alt","to","Component","process","AdoptionPage","state","dog","cat","people","currentUser","animal","updatePeople","fetch","config","then","res","json","data","console","log","setState","this","e","preventDefault","type","target","fetchCalls","method","headers","body","JSON","stringify","self","names","Name","count","push","intervalID","setInterval","length","clearInterval","name","value","update","fillTheQueue","imageURL","description","gender","age","breed","story","onClick","adoptThePet","map","person","idx","key","onSubmit","onJoinLineClick","htmlFor","placeholder","required","Root","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c1d2608.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass LandingPage extends Component {\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <p>Welcome to the FIFO Adoption Center!  We have many wonderful pets for you to adopt!  To begin the adoption process, please proceed to our adoption page. Once there you will be able to see the pets that are currently available for adoption.  Due to our strict first in first out policies, you will only be able to see one cat and one dog at a time. If you choose to become the new forever home for one of our lovable animals, you can join the line of potential adopters by entering your name at the bottom of the adoption page. Once you have joined the line, you will be able to see the pets being adopted and where you are in the line in relation to the front. Once you have reached the front of the line, you will see an option to adopt either the dog or the cat at the front of the line. Please make your decision, and the pet will be yours to take home and love! In the future we hope to be able to provide the option to adopt BOTH a cat AND a dog at the same time, but for now, if your desire is to bring diversity to your home by adopting both, please go through the process twice!</p>\n        <img id=\"adoption\" src='https://cdn.abcotvs.com/dip/images/5760725_dogadoption.JPG?w=1600' alt='really cute dog getting adopted'/>\n        <Link className=\"link\" to={`/AdoptionPage`}>See available pets!</Link>\n      </div>\n    )\n  }\n}\nexport default LandingPage","export default {\n  REACT_APP_API_BASE: process.env.REACT_APP_API_BASE || `http://localhost:8000`\n}","import React, { Component } from 'react';\n\nimport config from '../config'\n\nclass AdoptionPage extends Component {\n\n  state = {\n    dog: {},\n    cat: {},\n    people: [],\n    currentUser: null,\n    animal: true,\n  }\n\n  componentDidMount() {\n    fetch(`${config.REACT_APP_API_BASE}/pets`)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          dog: data[1],\n          cat: data[0],\n        })\n      })\n\n    this.updatePeople()\n\n  }\n\n  updatePeople = () => {\n    fetch(`${config.REACT_APP_API_BASE}/people`)\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      this.setState({\n        people: data\n      })\n    })\n  }\n\n  adoptThePet(e) {\n    e.preventDefault();\n\n    let type = {type: e.target.id}\n    \n    this.fetchCalls(type)\n  }\n\n  fetchCalls(animal) {\n    fetch(`${config.REACT_APP_API_BASE}/pets`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(animal)\n    })\n      .then(() => {\n        return fetch(`${config.REACT_APP_API_BASE}/pets`);\n      })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          dog: data[1],\n          cat: data[0],\n        })\n        return fetch(`${config.REACT_APP_API_BASE}/people`)\n      })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        this.setState({\n          people: data\n        })\n      })\n  }\n\n  fillTheQueue() {\n    let self = this;\n    let names = [{ Name: 'Malcolm Reynolds' }, { Name: 'River Tam' }, { Name: 'Kaylee Frye' }, { Name: 'Hoban Washburne' }]\n    let count = 3;\n    let update = this.state.people;\n    update.push(names[count].Name);\n    let intervalID = setInterval(function () {\n      fetch(`${config.REACT_APP_API_BASE}/people`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify(names[count--]),\n      }).then(() => {\n        self.updatePeople()\n      });\n      if (self.state.people.length === 4) {\n        clearInterval(intervalID)\n      }\n    }, 5000);\n  };\n\n  onJoinLineClick(e) {\n    e.preventDefault();\n\n    let name = { Name: e.target.name.value }\n    console.log(e.target.name.value)\n    let update = this.state.people;\n    update.push(e.target.name.value)\n\n    fetch(`${config.REACT_APP_API_BASE}/people`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(name),\n    })\n\n    this.setState({\n      people: update,\n      currentUser: e.target.name.value,\n    })\n\n    let self = this;\n\n    let intervalID = setInterval(function () {\n      let animal;\n\n      if (self.state.animal === true) {\n        animal = { type: 'cats' }\n      } else {\n        animal = { type: 'dogs' }\n      }\n\n      self.fetchCalls(animal)\n\n      self.setState({\n        animal: !self.state.animal\n      })\n      if (self.state.people[1] === self.state.currentUser) {\n        clearInterval(intervalID)\n      }\n    }, 5000)\n\n    e.target.name.value = ''\n\n  }\n\n\n\n  render() {\n    let dog = this.state.dog;\n    let cat = this.state.cat;\n    let people = this.state.people;\n\n    if(people[0] === this.state.currentUser && people.length === 1){\n      this.fillTheQueue();\n    }\n\n    return (\n      <div id=\"pets\">\n        <div className='dog-info'>\n          <h2>{dog.name}</h2>\n          <img src={dog.imageURL} alt={dog.description} />\n          <p>{dog.description}</p>\n          <ul>\n            <li>{dog.gender}</li>\n            <li>{dog.age}</li>\n            <li>{dog.breed}</li>\n          </ul>\n          <p>{dog.story}</p>\n          {this.state.currentUser && this.state.currentUser === people[0] && <form id='dog'>\n            <button id=\"dogs\" onClick={e => this.adoptThePet(e)}>Adopt Me!</button>\n          </form>}\n        </div>\n        <div className='cat-info'>\n          <h2>{cat.name}</h2>\n          <img src={cat.imageURL} alt={cat.description} />\n          <p>{cat.description}</p>\n          <ul>\n            <li>{cat.gender}</li>\n            <li>{cat.age}</li>\n            <li>{cat.breed}</li>\n          </ul>\n          <p>{cat.story}</p>\n          {this.state.currentUser && this.state.currentUser === people[0] && <form id='cat'>\n            <button id=\"cats\" onClick={e => this.adoptThePet(e)}>Adopt Me!</button>\n          </form>}\n        </div>\n        <div className=\"form\">\n          <p>If you would like to adopt a pet, please join the back of the line!</p>\n          <ul>\n            {people.map((person, idx) => {\n              return (\n                <li key={idx}>{person}</li>\n              )\n            })}\n          </ul>\n          <form onSubmit={e => this.onJoinLineClick(e)}>\n            <label htmlFor=\"name\"></label>\n            <input id=\"name\" placeholder='Your name eg. John Smith' required></input>\n            <button>Join the line!</button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\nexport default AdoptionPage","import React from 'react'\nimport { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport LandingPage from '../components/LandingPage'\nimport AdoptionPage from '../components/AdoptionPage'\n\n\nclass Root extends Component {\n  \n  \n  render() {\n    return (\n      <div>\n        <h1>Petful</h1>\n        <Switch>\n          <Route exact path={'/'} component={LandingPage} />\n          <Route path={'/AdoptionPage'} component={AdoptionPage} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default Root\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './root/Root'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter> \n    <Root />\n  </BrowserRouter>, \n  document.getElementById('root'))\n"],"sourceRoot":""}